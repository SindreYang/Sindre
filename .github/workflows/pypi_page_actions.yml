name: Deploy sindre 
on:
  release:
    types:
      - released

      
jobs:
  deploy_win_amd64_pypi:
    runs-on: windows-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Build Wheel
        run: |
            python -m pip install cython wheel
            python setup.py bdist_wheel --plat-name=win_amd64 --version="${{ github.event.release.tag_name }}"
            dir dist/dist/

      - name: Save Cache build
        uses: actions/cache/save@v4
        with:
            path: dist/dist/
            key: build_${{ github.event.release.tag_name }}
            enableCrossOsArchive: 'true'


      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/dist/sindre-${{ github.event.release.tag_name }}-py3-none-win_amd64.whl
          asset_name: sindre-${{ github.event.release.tag_name }}-py3-none-win_amd64.whl
          asset_content_type: application/zip



  deploy_linux_pypi:
    needs: [deploy_win_amd64_pypi]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v3


      - name: Set package version from release tag
        run: echo "PACKAGE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Debug Environment Variable
        run: echo "PACKAGE_VERSION is ${{ env.PACKAGE_VERSION }}"
      
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
           
      - name: Get Cache build 
        uses: actions/cache/restore@v4
        with:
            path: dist/dist/
            key: build_${{ github.event.release.tag_name }}
            enableCrossOsArchive: 'true'
            fail-on-cache-miss: 'true'

      - name: Build Wheel
        run: |
            python -m pip install cython wheel
            python setup.py bdist_wheel --plat-name=manylinux1_x86_64
            ls dist/dist/


      - name: Upload to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/dist/sindre-${{ github.event.release.tag_name }}-py3-none-manylinux1_x86_64.whl
          asset_name: sindre-${{ github.event.release.tag_name }}-py3-none-manylinux1_x86_64.whl
          asset_content_type: application/zip


          
     
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
            password: ${{ secrets.PYPI_KEY }}
            packages-dir: dist/dist/


            
  deploy_page:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout main
          uses: actions/checkout@v3
        
        - name: Set up Python 3.8
          uses: actions/setup-python@v4
          with:
            python-version: 3.8

        - name: Build Mkdocs
          run: |
              python -m pip install mkdocs mkdocs-material mkdocstrings mkdocstrings-python
              python -m mkdocs build


        - name: Deploy
          uses: peaceiris/actions-gh-pages@v3
          with:
            deploy_key: ${{secrets.SSH_KEY}}
            external_repository: SindreYang/sindre
            publish_branch: gh-pages
            publish_dir: ./site







        
